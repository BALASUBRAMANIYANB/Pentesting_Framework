from flask import Flask, render_template, jsonify
import threading
import time
from modules.scanner import Scanner
from modules.sql_injection import SQLInjectionTester
from modules.xss_detection import XSSDetector
from modules.brute_force import BruteForceTester
from modules.file_inclusion import FileInclusionDetector

app = Flask(__name__)

# Global variables to hold test results
results = {
    'scanner': [],
    'sql_injection': [],
    'xss': []
}

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/results')
def get_results():
    return jsonify(results)

def start_scan(target_url):
    # Create instances of test modules
    scanner = Scanner(target_url)
    sql_tester = SQLInjectionTester(target_url, 'parameter')  # Update with correct arguments if needed
    xss_tester = XSSDetector(target_url)
    brute_tester = BruteForceTester(target_url)
    file_inclusion_tester = FileInclusionDetector(target_url)

    # Perform scans and update results
    results['scanner'] = scanner.scan()
    results['sql_injection'] = sql_tester.test()
    results['xss'] = xss_tester.test()
    # Assuming brute_tester and file_inclusion_tester have similar methods to update results
    # results['brute_force'] = brute_tester.test()
    # results['file_inclusion'] = file_inclusion_tester.test()

if __name__ == '__main__':
    # Start the scanning in a separate thread
    target_url = 'http://example.com'  # Replace with actual target URL
    scan_thread = threading.Thread(target=start_scan, args=(target_url,))
    scan_thread.start()
    app.run(debug=True)
