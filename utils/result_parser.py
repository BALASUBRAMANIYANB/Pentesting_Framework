# utils/result_parser.py

class ResultParser:
    """
    A utility class to parse and format the results of various scans and tests.
    """

    @staticmethod
    def parse_sql_injection_result(response_text):
        """
        Parse the result of a potential SQL injection response.
        :param response_text: The response content from the server
        :return: True if SQL injection vulnerability is detected, False otherwise
        """
        if "SQL syntax" in response_text or "mysql_fetch" in response_text:
            return True
        return False

    @staticmethod
    def parse_xss_result(response_text):
        """
        Parse the result of a potential XSS attack.
        :param response_text: The response content from the server
        :return: True if XSS vulnerability is detected, False otherwise
        """
        if "<script>alert(1)</script>" in response_text:
            return True
        return False

    @staticmethod
    def format_as_html_report(results):
        """
        Format the scan results into a simple HTML report.
        :param results: A dictionary containing the results of the tests
        :return: A formatted HTML string
        """
        html_content = "<html><head><title>Penetration Test Report</title></head><body>"
        html_content += "<h1>Penetration Test Report</h1>"
        for test, result in results.items():
            html_content += f"<h2>{test}</h2><p>{result}</p>"
        html_content += "</body></html>"
        return html_content

    @staticmethod
    def format_as_json(results):
        """
        Format the scan results into a JSON string.
        :param results: A dictionary containing the results of the tests
        :return: A formatted JSON string
        """
        import json
        return json.dumps(results, indent=4)
