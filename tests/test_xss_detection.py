# tests/test_xss_detection.py

import unittest
from modules.xss_detection import XSSDetector
from unittest.mock import patch

class TestXSSDetector(unittest.TestCase):
    @patch('modules.xss_detection.make_request')
    def test_xss(self, mock_make_request):
        # Mocking the response to simulate XSS vulnerability detection
        mock_make_request.return_value.text = "<script>alert(1)</script>"
        
        detector = XSSDetector("http://example.com", "search")
        result = detector.test_xss()
        
        # Verifying the mock was called and the XSS payload was used in the test
        mock_make_request.assert_called()
        self.assertIn("<script>alert(1)</script>", mock_make_request.return_value.text)

if __name__ == '__main__':
    unittest.main()
